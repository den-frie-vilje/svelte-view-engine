'use strict';

function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
function validate_component(component, name) {
    if (!component || !component.$$render) {
        if (name === 'svelte:component')
            name += ' this={...}';
        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
    }
    return component;
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_render: [],
            after_render: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.head
            };
        },
        $$render
    };
}

/* test/Widget.svelte generated by Svelte v3.5.3 */

const css = {
	code: "div.svelte-14ossig{background:yellow}",
	map: "{\"version\":3,\"file\":\"Widget.svelte\",\"sources\":[\"Widget.svelte\"],\"sourcesContent\":[\"<script>\\nexport let prop = 567;\\n</script>\\n\\n<style>\\ndiv {\\n\\tbackground: yellow;\\n}\\n</style>\\n\\n<div>\\n\\tWidget {prop}\\n</div>\\n\"],\"names\":[],\"mappings\":\"AAKA,GAAG,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,AACnB,CAAC\"}"
};

const Widget = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { prop = 567 } = $$props;

	if ($$props.prop === void 0 && $$bindings.prop && prop !== void 0) $$bindings.prop(prop);

	$$result.css.add(css);

	return `<div class="svelte-14ossig">
		Widget ${escape(prop)}
	</div>`;
});

/* test/Home.svelte generated by Svelte v3.5.3 */

const css$1 = {
	code: "div.svelte-1n3ijyr{background:red}",
	map: "{\"version\":3,\"file\":\"Home.svelte\",\"sources\":[\"Home.svelte\"],\"sourcesContent\":[\"<script>\\nimport Widget from \\\"./Widget.svelte\\\";\\n\\nlet prop = \\\"789\\\";\\n\\nexport let name = 123;\\n</script>\\n\\n<style>\\ndiv {\\n\\tbackground: red;\\n}\\n</style>\\n\\n<svelte:head>\\n\\t<title>Home</title>\\n\\t<meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/>\\n</svelte:head>\\n\\n<svelte:body on:load={load}/>\\n\\n<div>\\n\\tHello {name}\\n\\t<Widget prop={prop}/>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AASA,GAAG,eAAC,CAAC,AACJ,UAAU,CAAE,GAAG,AAChB,CAAC\"}"
};

let prop = "789";

const Home = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	

let { name = 123 } = $$props;

	if ($$props.name === void 0 && $$bindings.name && name !== void 0) $$bindings.name(name);

	$$result.css.add(css$1);

	return `${($$result.head += `<title>Home</title><meta name="viewport" content="width=device-width">`, "")}



	<div class="svelte-1n3ijyr">
		Hello ${escape(name)}
		${validate_component(Widget, 'Widget').$$render($$result, { prop: prop }, {}, {})}
	</div>`;
});

module.exports = Home;
